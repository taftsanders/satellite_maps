#!/usr/bin/python3

import helper as helper


class Hosts:

    def display(self):
        for file in helper.directory_content('hosts_org'):
            information = helper.convert(file)
            print(file)
            print('')
            for hosts in information:
                print('Name: ', hosts.get('name'))
                print('ID: ', hosts.get('id'))
                print('Created: ', hosts.get('created_at'))
                print('Updated: ', hosts.get('updated_at'))
                print('IP: ', hosts.get('ip'))
                print('MAC: ', hosts.get('mac'))
                print('Environment Name: ', hosts.get('environment_name'))
                print('Environment ID: ', hosts.get('environment_id'))
                print('Last Report: ', hosts.get('last_report'))
                print('Realm Name: ', hosts.get('realm_name'))
                print('Realm ID: ', hosts.get('realm_id'))
                print('Smart Proxy Name: ', hosts.get('sp_name'))
                print('Smart Proxy ID: ', hosts.get('sp_id'))
                print('Smart Proxy MAC ', hosts.get('sp_mac'))
                print('Domain Name: ', hosts.get('domain_name'))
                print('Domain ID: ', hosts.get('domain_id'))
                print('Architecture Name: ', hosts.get('architecture_name'))
                print('Architecture ID: ', hosts.get('architecture_id'))
                print('Operating System Name: ', hosts.get('operatingsystem_name'))
                print('Operating System ID: ', hosts.get('operatingsystem_id'))
                print('Subnet Name: ', hosts.get('subnet_name'))
                print('Subnet ID: ', hosts.get('subnet_id'))
                print('Smart Proxy Subnet ID: ', hosts.get('sp_subnet_id'))
                print('Partition Table Name: ', hosts.get('ptable_name'))
                print('Partition Table ID: ', hosts.get('ptable_id'))
                print('Medium Name: ', hosts.get('medium_name'))
                print('Medium ID: ', hosts.get('medium_id'))
                print('Build: ', hosts.get('build'))
                print('Comment: ', hosts.get('comment'))
                print('Disk: ', hosts.get('disk'))
                print('Installed at: ', hosts.get('installed_at'))
                print('Model ID: ', hosts.get('model_id'))
                print('Hostgroup ID: ', hosts.get('hostgroup_id'))
                print('Owner ID: ', hosts.get('owner_id'))
                print('Owner Type: ', hosts.get('owner_type'))
                print('Enabled: ', hosts.get('enabled'))
                print('Puppet CA Proxy ID: ', hosts.get('puppet_ca_proxy_id'))
                print('Managed: ', hosts.get('managed'))
                print('Use Image: ', hosts.get('use_image'))
                print('Image File: ', hosts.get('image_file'))
                print('UUID: ', hosts.get('uuid'))
                print('Compute Resource Name: ', hosts.get('compute_resource_name'))
                print('Compute Resource ID: ', hosts.get('compute_resource_id'))
                print('Compute Profile Name: ', hosts.get('compute_profile_name'))
                print('Compute Profile ID: ', hosts.get('compute_profile_id'))
                print('Capabilities:')
                for capability in hosts.get('capabilities'):
                    print('\t' + capability)
                print('Provisioning Method: ', hosts.get('provision_method'))
                print('Puppet Proxy ID: ', hosts.get('puppet_proxy_id'))
                print('Certname: ', hosts.get('certname'))
                print('Image Name: ', hosts.get('image_name'))
                print('Image ID: ', hosts.get('image_id'))

                print('Last Compile: ', hosts.get('last_compile'))
                print('Global Status Label: ', hosts.get('global_status_label'))
                print('Global Status: ', hosts.get('global_status'))
                print('Organization Name: ', hosts.get('organization_name'))
                print('Organization ID: ', hosts.get('organization_id'))
                print('Location Name: ', hosts.get('location_name'))
                print('Location ID: ', hosts.get('location_id'))
                print('Puppet Status: ', hosts.get('puppet_status'))
                print('Model Name: ', hosts.get('model_name'))
                print('Errata Status Label: ', hosts.get('errata_status_label'))
                print('Errata Status: ', hosts.get('errata_status'))
                print('Subscription Status Label: ', hosts.get('subscription_status_label'))
                print('Subscription Status: ', hosts.get('subscription_status'))
                print('Hostgroup Name: ', hosts.get('hostgroup_name'))
                print('Hostgroup Title: ', hosts.get('hostgroup_title'))
                print(helper.reset + helper.bluebg + 'Content Facet Attributes:')
                try:
                    print('\tID: ', hosts.get('content_facet_attributes').get('id'))
                    print('\tUUID: ', hosts.get('content_facet_attributes').get('uuid'))
                    print('\tContent View Name: ', hosts.get('content_facet_attributes').get('content_view_name'))
                    print('\tContent View ID: ', hosts.get('content_facet_attributes').get('content_view_id'))
                    print('\tLifecycle Environment Name: ', hosts.get('content_facet_attributes').get('lifecycle_environment_name'))
                    print('\tLifecycle Environment ID: ', hosts.get('content_facet_attributes').get('lifecycle_environment_id'))
                except AttributeError:
                    print('\tNone')
                print(helper.reset + helper.darkredtext + 'Errata Counts:')
                try:
                    print('\tSecurity: ', hosts.get('content_facet_attributes').get('errata_counts').get('security'))
                    print('\tBugfix: ', hosts.get('content_facet_attributes').get('errata_counts').get('bugfix'))
                    print('\tEnhancement: ', hosts.get('content_facet_attributes').get('errata_counts').get('enhancement'))
                    print('\tTotal: ', hosts.get('content_facet_attributes').get('errata_counts').get('total'))
                except AttributeError:
                    print('\tNone')
                print(helper.reset + helper.orangebg + 'Subscription Facet Attributes:')
                try:
                    print('\tID: ', hosts.get('subscription_facet_attributes').get('id'))
                    print('\tUUID: ', hosts.get('subscription_facet_attributes').get('uuid'))
                    print('\tLast Checkin: ', hosts.get('subscription_facet_attributes').get('last_checkin'))
                    print('\tService Level: ', hosts.get('subscription_facet_attributes').get('service_level'))
                    print('\tRelease Version: ', hosts.get('subscription_facet_attributes').get('service_level'))
                    print('\tAutoheal: ', hosts.get('subscription_facet_attributes').get('autoheal'))
                    print('\tRegistered at: ', hosts.get('subscription_facet_attributes').get('registered_at'))
                    print('\tUser: ', hosts.get('subscription_facet_attributes').get('user'))
                except AttributeError:
                    print('None')
                print('Content Host ID: ', hosts.get('content_host_id'))
                print('')
                print(helper.reset + helper.yellowtext + '#' * 100 + '\n' + helper.reset)
